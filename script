do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v82=0;local v83;while true do if (v82==(0 -0)) then v83=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + (951 -(282 + 595)))))) + ((2206 -(1523 + 114)) -(367 + 201)))) ;return v83-(v83%(928 -(193 + 21 + 713))) ;end end else local v84=2^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and 1) or (0 + 0) ;end end v22=nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34,v35,v36,v37=v1(v16,v19,v19 + ((3 + 0) -0) );v19=v19 + (1069 -(16 + 52 + 997)) ;return (v37 * (16778486 -(226 + 1044))) + (v36 * (285370 -219834)) + (v35 * ((1330 -(892 + 65)) -(32 + (202 -117)))) + v34 ;end v25=nil;v18=4;end if (v18==6) then v29=nil;function v29()local v38=0;local v39;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v38==3) then v45=nil;v46=nil;v38=1281 -(37 + 1240) ;end if (v38==(0 -0)) then v39=0 -0 ;v40=nil;v38=1 -0 ;end if (v38~=(1 + 1)) then else v43=nil;v44=nil;v38=3;end if (v38==(1 -0)) then v41=nil;v42=nil;v38=2;end if (v38~=4) then else while true do if (v39~=(1 + 0)) then else local v99=0;while true do if ((1474 -(1329 + 145))~=v99) then else v42=nil;v43=nil;v99=972 -(140 + 831) ;end if ((1851 -(1409 + 441))~=v99) then else v39=720 -(15 + 703) ;break;end end end if (v39~=(2 + 1)) then else v46=nil;while true do local v101=438 -(262 + 176) ;while true do if (v101==(1722 -(345 + 1376))) then if (v40~=0) then else v41={};v42={};v43={};v44={v41,v42,nil,v43};v40=1 -0 ;end break;end if (v101==0) then local v102=1262 -(1091 + 171) ;while true do if (v102~=(1 + 0)) then else v101=1;break;end if (v102~=(0 -0)) then else if (v40==(3 -2)) then local v211=0;while true do if (v211==0) then v45=v24();v46={};v211=375 -(123 + 251) ;end if (v211==(9 -7)) then v40=700 -(208 + 490) ;break;end if (v211~=1) then else for v299=1,v45 do local v300=0;local v301;local v302;while true do if (v300~=(0 + 0)) then else local v310=0 + 0 ;while true do if (v310~=(836 -(660 + 176))) then else local v326=0 + 0 ;while true do if (0~=v326) then else v301=v22();v302=nil;v326=203 -(14 + 188) ;end if (v326==(676 -(534 + 141))) then v310=1;break;end end end if (v310~=(1 + 0)) then else v300=1 + 0 ;break;end end end if (v300==(1 + 0)) then if (v301==(1 -0)) then v302=v22()~=0 ;elseif (v301==2) then v302=v25();elseif (v301~=(4 -1)) then else v302=v26();end v46[v299]=v302;break;end end end v44[8 -5 ]=v22();v211=2;end end end if (v40==(2 + 0)) then for v245=1,v24() do local v246=0 + 0 ;local v247;local v248;while true do if (v246==1) then while true do if (0~=v247) then else v248=v22();if (v21(v248,397 -(115 + 281) ,1)~=0) then else local v318=0;local v319;local v320;local v321;local v322;local v323;local v324;while true do if (2==v318) then v323=nil;v324=nil;v318=3;end if (v318==(6 -3)) then while true do if (v319~=(2 + 0)) then else v324=nil;while true do if (v320~=1) then else local v331=0;while true do if (v331~=(2 -1)) then else v320=2;break;end if (v331~=(0 -0)) then else v323=nil;v324=nil;v331=1;end end end if ((867 -(550 + 317))~=v320) then else v321=0;v322=nil;v320=1 -0 ;end if (v320==(2 -0)) then while true do if (v321==(0 -0)) then local v332=285 -(134 + 151) ;local v333;while true do if ((1665 -(970 + 695))==v332) then v333=0;while true do if (v333==(0 -0)) then local v342=0;while true do if (v342==1) then v333=1;break;end if (v342==0) then local v345=0;while true do if (v345~=(1990 -(582 + 1408))) then else v322=v21(v248,2,3);v323=v21(v248,4,20 -14 );v345=1;end if (v345==(1 -0)) then v342=1;break;end end end end end if (v333==(3 -2)) then v321=1;break;end end break;end end end if ((1825 -(1195 + 629))~=v321) then else local v334=0;while true do if (v334==(1 -0)) then v321=2;break;end if (v334~=(241 -(187 + 54))) then else v324={v23(),v23(),nil,nil};if (v322==(0 + 0)) then local v340=0 + 0 ;local v341;while true do if (v340~=(0 -0)) then else v341=0 -0 ;while true do if (v341==(0 + 0)) then v324[3]=v23();v324[4]=v23();break;end end break;end end elseif (v322==1) then v324[1639 -(1373 + 263) ]=v24();elseif (v322==2) then v324[3]=v24() -((1002 -(451 + 549))^16) ;elseif (v322~=(1 + 2)) then else local v349=0 -0 ;local v350;while true do if (v349==0) then v350=0;while true do if (v350==(0 -0)) then v324[1387 -(746 + 638) ]=v24() -((1 + 1)^16) ;v324[4]=v23();break;end end break;end end end v334=1 -0 ;end end end if (v321==3) then if (v21(v323,344 -(218 + 123) ,1584 -(1535 + 46) )==1) then v324[4 + 0 ]=v46[v324[1 + 3 ]];end v41[v245]=v324;break;end if (v321~=2) then else local v336=560 -(306 + 254) ;local v337;while true do if (v336~=(0 + 0)) then else v337=0;while true do if (v337~=(0 -0)) then else local v343=0;while true do if (v343==(1467 -(899 + 568))) then if (v21(v323,1,1)~=(1 + 0)) then else v324[2]=v46[v324[2]];end if (v21(v323,4 -2 ,605 -(268 + 335) )==1) then v324[3]=v46[v324[293 -(60 + 230) ]];end v343=1;end if (v343~=(573 -(426 + 146))) then else v337=1;break;end end end if (v337==1) then v321=1 + 2 ;break;end end break;end end end end break;end end break;end if (v319~=(1457 -(282 + 1174))) then else v322=nil;v323=nil;v319=813 -(569 + 242) ;end if (v319==0) then local v330=0 -0 ;while true do if (v330~=(1 + 0)) then else v319=1;break;end if (v330==(1024 -(706 + 318))) then v320=1251 -(721 + 530) ;v321=nil;v330=1272 -(945 + 326) ;end end end end break;end if (0~=v318) then else v319=0;v320=nil;v318=2 -1 ;end if (v318~=1) then else v321=nil;v322=nil;v318=2 + 0 ;end end end break;end end break;end if (v246~=0) then else local v303=0;while true do if (v303==(700 -(271 + 429))) then v247=0;v248=nil;v303=1 + 0 ;end if (v303==(1501 -(1408 + 92))) then v246=1;break;end end end end end for v249=1087 -(461 + 625) ,v24() do v42[v249-1 ]=v29();end return v44;end v102=1;end end end end end break;end if (0==v39) then v40=0;v41=nil;v39=1;end if ((1290 -(993 + 295))~=v39) then else local v100=0 + 0 ;while true do if (v100~=1) then else v39=1174 -(418 + 753) ;break;end if (v100==0) then v44=nil;v45=nil;v100=1 + 0 ;end end end end break;end end end v30=nil;v18=7;end if (v18==4) then function v25()local v47=v24();local v48=v24();local v49=1;local v50=(v21(v48,1 + 0 ,6 + 14 ) * ((105 -(4 + 13 + (499 -(15 + 398))))^(9 + 23))) + v47 ;local v51=v21(v48,15 + (988 -(18 + 964)) ,68 -37 );local v52=((v21(v48,561 -(406 + 123) )==((6662 -4892) -(1749 + 20))) and  -(1 + 0)) or (1323 -(1249 + 73)) ;if (v51==(0 + 0)) then if (v50==(0 -0)) then return v52 * (1145 -(466 + 679)) ;else local v90=0 + 0 ;while true do if ((0 -(0 + 0))==v90) then v51=2 -1 ;v49=1900 -(106 + 1794) ;break;end end end elseif (v51==2047) then return ((v50==(1257 -(658 + 385 + 214))) and (v52 * ((1 + 0)/((850 -(20 + 830)) + 0)))) or (v52 * NaN) ;end return v8(v52,v51-(3019 -1996) ) * (v49 + (v50/((5 -3)^(166 -(4 + 110))))) ;end v26=nil;function v26(v53)local v54=0 + 0 ;local v55;local v56;while true do if (v54==(126 -((297 -181) + 10))) then v55=nil;if  not v53 then local v98=0;while true do if (v98==(0 + (1551 -(1126 + 425)))) then v53=v24();if (v53==(738 -(542 + 196))) then return "";end break;end end end v54=1 -0 ;end if (v54==(1 + 1)) then v56={};for v91=1 + 0 , #v55 do v56[v91]=v2(v1(v3(v55,v91,v91)));end v54=3;end if (v54==(2 + 1)) then return v6(v56);end if (v54==1) then v55=v3(v16,v19,(v19 + v53) -1 );v19=v19 + v53 ;v54=4 -2 ;end end end v18=5;end if (v18==2) then function v22()local v57=0;local v58;while true do if (v57==((1188 -782) -(118 + 287))) then return v58;end if (v57==0) then v58=v1(v16,v19,v19);v19=v19 + (3 -2) ;v57=1122 -(118 + 1003) ;end end end v23=nil;function v23()local v59,v60=v1(v16,v19,v19 + (9 -7) );v19=v19 + (379 -(142 + 235)) ;return (v60 * (1233 -(553 + 424))) + v59 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v61)if (v1(v61,2)==79) then local v85=0;while true do if (0==v85) then v20=v0(v3(v61,1,1));return "";end end else local v86=v2(v0(v61,16));if v20 then local v93=v5(v86,v20);v20=nil;return v93;else return v86;end end end);v18=1;end if (v18==7) then function v30(v62,v63,v64)local v65=v62[1];local v66=v62[2];local v67=v62[3];return function(...)local v68=v65;local v69=v66;local v70=v67;local v71=v28;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + 1 ];else v78[v87]=v75[v87 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=29) then if (v81<=14) then if (v81<=6) then if (v81<=2) then if (v81<=0) then v78[v80[2]][v80[3]]=v80[4];elseif (v81==1) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=4) then if (v81>3) then v78[v80[2]]=v80[3]~=0 ;else local v112=0;local v113;while true do if (v112==0) then v113=v80[2];v78[v113](v78[v113 + 1 ]);break;end end end elseif (v81>5) then local v114=0;local v115;local v116;local v117;local v118;while true do if (v114==1) then v73=(v117 + v115) -1 ;v118=0;v114=2;end if (0==v114) then v115=v80[2];v116,v117=v71(v78[v115]());v114=1;end if (v114==2) then for v272=v115,v73 do v118=v118 + 1 ;v78[v272]=v116[v118];end break;end end else local v119=v80[2];v78[v119](v13(v78,v119 + 1 ,v73));end elseif (v81<=10) then if (v81<=8) then if (v81>7) then local v120=v80[2];local v121=v78[v120];for v212=v120 + 1 ,v80[3] do v7(v121,v78[v212]);end else for v213=v80[2],v80[3] do v78[v213]=nil;end end elseif (v81>9) then v78[v80[2]]=v30(v69[v80[3]],nil,v64);else local v123=v80[2];v78[v123]=v78[v123](v13(v78,v123 + 1 ,v73));end elseif (v81<=12) then if (v81==11) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v125=0;local v126;local v127;local v128;while true do if (v125==1) then v128={};v127=v10({},{__index=function(v275,v276)local v277=0;local v278;while true do if (v277==0) then v278=v128[v276];return v278[1][v278[2]];end end end,__newindex=function(v279,v280,v281)local v282=0;local v283;while true do if (v282==0) then v283=v128[v280];v283[1][v283[2]]=v281;break;end end end});v125=2;end if (v125==0) then v126=v69[v80[3]];v127=nil;v125=1;end if (v125==2) then for v284=1,v80[4] do local v285=0;local v286;while true do if (v285==1) then if (v286[1]==59) then v128[v284-1 ]={v78,v286[3]};else v128[v284-1 ]={v63,v286[3]};end v77[ #v77 + 1 ]=v128;break;end if (v285==0) then v72=v72 + 1 ;v286=v68[v72];v285=1;end end end v78[v80[2]]=v30(v126,v127,v64);break;end end end elseif (v81>13) then v78[v80[2]]={};else v64[v80[3]]=v78[v80[2]];end elseif (v81<=21) then if (v81<=17) then if (v81<=15) then local v105=0;local v106;while true do if (v105==0) then v106=v80[2];v78[v106]=v78[v106]();break;end end elseif (v81>16) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]]=v80[3];end elseif (v81<=19) then if (v81>18) then local v136=v80[2];local v137,v138=v71(v78[v136]());v73=(v138 + v136) -1 ;local v139=0;for v217=v136,v73 do local v218=0;while true do if (v218==0) then v139=v139 + 1 ;v78[v217]=v137[v139];break;end end end else for v219=v80[2],v80[3] do v78[v219]=nil;end end elseif (v81==20) then do return;end else local v140=0;local v141;while true do if (v140==0) then v141=v80[2];v78[v141]=v78[v141]();break;end end end elseif (v81<=25) then if (v81<=23) then if (v81>22) then local v142=v80[2];local v143=v78[v80[3]];v78[v142 + 1 ]=v143;v78[v142]=v143[v80[4]];else do return;end end elseif (v81==24) then v78[v80[2]]=v64[v80[3]];else local v149=v69[v80[3]];local v150;local v151={};v150=v10({},{__index=function(v221,v222)local v223=v151[v222];return v223[1][v223[2]];end,__newindex=function(v224,v225,v226)local v227=0;local v228;while true do if (v227==0) then v228=v151[v225];v228[1][v228[2]]=v226;break;end end end});for v229=1,v80[4] do v72=v72 + 1 ;local v230=v68[v72];if (v230[1]==59) then v151[v229-1 ]={v78,v230[3]};else v151[v229-1 ]={v63,v230[3]};end v77[ #v77 + 1 ]=v151;end v78[v80[2]]=v30(v149,v150,v64);end elseif (v81<=27) then if (v81>26) then v78[v80[2]]=v80[3]~=0 ;else v78[v80[2]]=v78[v80[3]][v80[4]];end elseif (v81>28) then local v156=0;local v157;local v158;while true do if (v156==0) then v157=v80[2];v158={};v156=1;end if (v156==1) then for v291=1, #v77 do local v292=0;local v293;while true do if (v292==0) then v293=v77[v291];for v312=0, #v293 do local v313=v293[v312];local v314=v313[1];local v315=v313[2];if ((v314==v78) and (v315>=v157)) then local v325=0;while true do if (v325==0) then v158[v315]=v314[v315];v313[1]=v158;break;end end end end break;end end end break;end end elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=44) then if (v81<=36) then if (v81<=32) then if (v81<=30) then v78[v80[2]][v80[3]]=v80[4];elseif (v81==31) then local v159=v80[2];v78[v159]=v78[v159](v13(v78,v159 + 1 ,v73));else local v161=v80[2];local v162,v163=v71(v78[v161](v13(v78,v161 + 1 ,v80[3])));v73=(v163 + v161) -1 ;local v164=0;for v232=v161,v73 do local v233=0;while true do if (v233==0) then v164=v164 + 1 ;v78[v232]=v162[v164];break;end end end end elseif (v81<=34) then if (v81>33) then v78[v80[2]]=v30(v69[v80[3]],nil,v64);else local v166=0;local v167;while true do if (v166==0) then v167=v80[2];v78[v167](v78[v167 + 1 ]);break;end end end elseif (v81>35) then v78[v80[2]]=v63[v80[3]];else v78[v80[2]]();end elseif (v81<=40) then if (v81<=38) then if (v81==37) then local v170=v80[2];local v171=v78[v170];local v172=v80[3];for v234=1,v172 do v171[v234]=v78[v170 + v234 ];end else local v173=v80[2];local v174={};for v237=1, #v77 do local v238=v77[v237];for v254=0, #v238 do local v255=v238[v254];local v256=v255[1];local v257=v255[2];if ((v256==v78) and (v257>=v173)) then v174[v257]=v256[v257];v255[1]=v174;end end end end elseif (v81>39) then local v175=v80[2];v78[v175](v13(v78,v175 + 1 ,v73));elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=42) then if (v81==41) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v176=v80[2];v78[v176]=v78[v176](v13(v78,v176 + 1 ,v80[3]));end elseif (v81==43) then v78[v80[2]][v80[3]]=v78[v80[4]];else local v180=v80[2];local v181=v78[v180];local v182=v80[3];for v239=1,v182 do v181[v239]=v78[v180 + v239 ];end end elseif (v81<=52) then if (v81<=48) then if (v81<=46) then if (v81==45) then v72=v80[3];else v72=v80[3];end elseif (v81>47) then local v185=v80[2];v78[v185](v13(v78,v185 + 1 ,v80[3]));else v78[v80[2]]=v64[v80[3]];end elseif (v81<=50) then if (v81==49) then v78[v80[2]]();else local v188=v80[2];local v189,v190=v71(v78[v188](v13(v78,v188 + 1 ,v80[3])));v73=(v190 + v188) -1 ;local v191=0;for v242=v188,v73 do v191=v191 + 1 ;v78[v242]=v189[v191];end end elseif (v81==51) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v192=v80[2];local v193=v78[v80[3]];v78[v192 + 1 ]=v193;v78[v192]=v193[v80[4]];end elseif (v81<=56) then if (v81<=54) then if (v81>53) then v64[v80[3]]=v78[v80[2]];else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81>55) then v78[v80[2]]=v80[3];else v78[v80[2]]={};end elseif (v81<=58) then if (v81>57) then v78[v80[2]]=v63[v80[3]];else local v206=v80[2];v78[v206]=v78[v206](v13(v78,v206 + 1 ,v80[3]));end elseif (v81==59) then v78[v80[2]]=v78[v80[3]];else local v210=v80[2];v78[v210](v13(v78,v210 + 1 ,v80[3]));end v72=v72 + 1 ;end end;end return v30(v29(),{},v17)(...);end end end vv9(),...);end
